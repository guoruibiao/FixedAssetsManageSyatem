{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Our FixedAssetsManageSystem\n\n\nThis is a simple document of our work. For more details, see as follows!\n\n\n:-)   \n you can click items you want at your left side.\n\n\nOutline\n\n\n\n\nRequirement Analysis\n  - Something about what we done.\n\n\nDatabase Design\n - For better usage and easy to code, database design is the basement.\n\n\nClasses\n - So many Classes we designed reference database.\n\n\nProject Structure \n Project hierarchy\n - We devided this homework into some divs for better use.\n\n\nThe Usage of Generic Paradigm\n - We benifited from generic paradigm so much. \n\n\nUser Interface Show\n - Show you the details of our homework.\n\n\nExperience\n - Here you can see our expreience during developing this.\n\n\nAbout Us\n - If you have something to say, see this page,please. \n\n\n\n\nProject layout\n\n\n\u9879\u76ee\u76ee\u5f55\u56fe\uff1a\n\n\nFixedAssetsManageSystem:   # Our Homework Overview\n    - src/\n        - dao/                            Interfaces for CRUD\n            - AdminDao.java    \n            - AssetsDao.java\n            - BaseDao.java\n            - UserDao.java\n        - dao.impl/                       Implements of DAO\n            - AdminDaoImpl.java\n            - AssetsDaoImpl.java\n            - ClazzDaoImpl.java\n            - UserDaoImpl.java\n        - entity/                         Entity for database table\n            - Admin.java\n            - Clazz.java\n            - FIxedAssets.java\n            - SubClass.java\n            - User.java\n            - todo.txt\n        - entrance/                        The entrance of this software\n            - Main.java\n        - service/                         For Business using\n            - AdminBusiness.java\n            - AssetsManager.java\n            - CatagoryBusiness.java\n            - UserBusiness.java\n        - util/                            Utils for coding in some methods\n            - AssignmentTool.java\n            - DateFormat.java\n            - ConnectionFactory.java\n            - JDBCPool.java\n    - test/                                My Code Test\n        - dao.impl.test/\n            - \u00b7\u00b7\u00b7\n        - util.test/\n            - \u00b7\u00b7\u00b7\n    - JRE System Library/                 Java Runtime Environment\n    - Referenced Libraries/               Java Referenced Lbraries\n    - JUnit 4/                            @Test using\n    - document/\n    - lib/                                Necessary for Coding\n        - apache-commons-DbUtils.jar\n        - mysql-connector.java", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-our-fixedassetsmanagesystem", 
            "text": "This is a simple document of our work. For more details, see as follows!  :-)     you can click items you want at your left side.", 
            "title": "Welcome to Our FixedAssetsManageSystem"
        }, 
        {
            "location": "/#outline", 
            "text": "Requirement Analysis   - Something about what we done.  Database Design  - For better usage and easy to code, database design is the basement.  Classes  - So many Classes we designed reference database.  Project Structure   Project hierarchy  - We devided this homework into some divs for better use.  The Usage of Generic Paradigm  - We benifited from generic paradigm so much.   User Interface Show  - Show you the details of our homework.  Experience  - Here you can see our expreience during developing this.  About Us  - If you have something to say, see this page,please.", 
            "title": "Outline"
        }, 
        {
            "location": "/#project-layout", 
            "text": "\u9879\u76ee\u76ee\u5f55\u56fe\uff1a  FixedAssetsManageSystem:   # Our Homework Overview\n    - src/\n        - dao/                            Interfaces for CRUD\n            - AdminDao.java    \n            - AssetsDao.java\n            - BaseDao.java\n            - UserDao.java\n        - dao.impl/                       Implements of DAO\n            - AdminDaoImpl.java\n            - AssetsDaoImpl.java\n            - ClazzDaoImpl.java\n            - UserDaoImpl.java\n        - entity/                         Entity for database table\n            - Admin.java\n            - Clazz.java\n            - FIxedAssets.java\n            - SubClass.java\n            - User.java\n            - todo.txt\n        - entrance/                        The entrance of this software\n            - Main.java\n        - service/                         For Business using\n            - AdminBusiness.java\n            - AssetsManager.java\n            - CatagoryBusiness.java\n            - UserBusiness.java\n        - util/                            Utils for coding in some methods\n            - AssignmentTool.java\n            - DateFormat.java\n            - ConnectionFactory.java\n            - JDBCPool.java\n    - test/                                My Code Test\n        - dao.impl.test/\n            - \u00b7\u00b7\u00b7\n        - util.test/\n            - \u00b7\u00b7\u00b7\n    - JRE System Library/                 Java Runtime Environment\n    - Referenced Libraries/               Java Referenced Lbraries\n    - JUnit 4/                            @Test using\n    - document/\n    - lib/                                Necessary for Coding\n        - apache-commons-DbUtils.jar\n        - mysql-connector.java", 
            "title": "Project layout"
        }, 
        {
            "location": "/RequirementAnalysis/", 
            "text": "Requirement Analysis\n\n\nThis is the most important thing for us before developing. So let's have a look.\n\n\nReferences\n\n\nWe just using teacher's document as our reference. And we also search some words from the internet.\n\n\n\n\n\n\nFixedAssets:\n which value more than 2000\uffe5\u3002\n\n\n\n\n\n\nraw document:\n    \u968f\u7740\u516c\u53f8\u4e1a\u52a1\u4e0d\u65ad\u53d1\u5c55\uff0c\u4eba\u5458\u8d8a\u6765\u8d8a\u591a\uff0c\u56fa\u5b9a\u8d44\u4ea7\u7684\u7ba1\u7406\u4eba\u5458\u538b\u529b\u9010\u6e10\u589e\u5927\uff0c\u9700\u8981\u5efa\u7acb\u6570\u636e\u5e93\u548c\u4f7f\u7528\u8f6f\u4ef6\u7cfb\u7edf\u6765\u8fdb\u884c\u7ba1\u7406\u3002\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\n\u7ba1\u7406\u5458\u767b\u5f55:\n    \u8981\u4f7f\u7528\u672c\u7cfb\u7edf\u5fc5\u987b\u5148\u767b\u5f55\uff0c\u5e76\u4e14\u53ea\u6709\u56fa\u5b9a\u8d44\u4ea7\u7ba1\u7406\u5458\u80fd\u591f\u767b\u5f55\u3002\u767b\u5f55\u7684\u65f6\u5019\u9700\u8981\u586b\u5199\u6b63\u786e\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u4fee\u6539\u81ea\u5df1\u7684\u5bc6\u7801\u3002\u7cfb\u7edf\u5141\u8bb8\u6709\u591a\u4e2a\u56fa\u5b9a\u8d44\u4ea7\u7684\u7ba1\u7406\u5458\uff0c\u6bcf\u4e2a\u7ba1\u7406\u5458\u7684\u6743\u9650\u76f8\u540c\u3002\n\n\n\n\n\n\n\u56fa\u5b9a\u8d44\u4ea7\u4fe1\u606f\u7ba1\u7406      \n\n\n\n\n\n\n\u56fa\u5b9a\u8d44\u4ea7\u7c7b\u522b\u7ba1\u7406\uff1a\n\n\n\u56fa\u5b9a\u8d44\u4ea7\u7684\u7c7b\u522b\u5728\u5f55\u5165\u8d44\u4ea7\u4fe1\u606f\u4e4b\u524d\u5c31\u5b9a\u4e49\u597d\uff0c\u5f55\u5165\u8d44\u4ea7\u4fe1\u606f\u4e4b\u540e\u53ef\u4ee5\u589e\u52a0\u65b0\u7684\u7c7b\u522b\u3002\u7c7b\u522b\u8981\u6c42\u5206\u4e3a\u4e24\u7ea7\uff0c\u5982\u5927\u7c7b\u53ef\u4ee5\u662f\u529e\u516c\u5916\u8bbe\u3001\u6570\u7801\u4ea7\u54c1\u3001\u8ba1\u7b97\u673a\u7b49\uff1b\u5c0f\u7c7b\u5206\u4e3a\u529e\u516c\u5916\u8bbe\uff1a\u4f20\u771f\u673a\u3001\u590d\u5370\u673a\u3001\u6253\u5370\u673a\u3001\u5176\u5b83\uff1b\u6570\u7801\u4ea7\u54c1\uff1a\u6570\u7801\u76f8\u673a\u3001\u6295\u5f71\u4eea\uff1b\u8ba1\u7b97\u673a\uff1a\u7b14\u8bb0\u672c\u7535\u8111\u3001\u53f0\u5f0f\u673a\u3001\u670d\u52a1\u5668\u7b49\u3002\n\u7c7b\u522b\u5e94\u5141\u8bb8\u6dfb\u52a0\u548c\u5220\u9664\u64cd\u4f5c\u3002\n    - \u56fa\u5b9a\u8d44\u4ea7\u4fe1\u606f\u7ba1\u7406\uff1a\n\n\n\u8d44\u4ea7\u7684\u4fe1\u606f\u5305\u62ec\u7f16\u53f7\u3001\u540d\u79f0\u3001\u7c7b\u522b\u3001\u578b\u53f7\u3001\u4ef7\u503c\u3001\u8d2d\u4e70\u65e5\u671f\u3001\u72b6\u6001\u3001\u4f7f\u7528\u8005\u3001\u5907\u6ce8\u7b49\u3002\u8d44\u4ea7\u578b\u53f7\u662f\u6587\u672c\u4fe1\u606f\uff0c\u8d44\u4ea7\u7684\u72b6\u6001\u5206\u4e3a\uff1a\u6b63\u5e38\u3001\u7ef4\u4fee\u3001\u62a5\u5e9f\uff0c\u4f7f\u7528\u8005\u4e3a\u7a7a\u8868\u793a\u8d44\u4ea7\u672a\u88ab\u4f7f\u7528\u3002\u8d44\u4ea7\u5e94\u5141\u8bb8\u6267\u884c\u6dfb\u52a0\u3001\u4fee\u6539\u548c\u5220\u9664\u64cd\u4f5c\u3002\n\n\n\n\n\n\n\n\n\n\n\u4eba\u5458\u4fe1\u606f\u7ba1\u7406\n\n\n\u8fd9\u91cc\u7684\u201c\u4eba\u5458\u201d\u662f\u6307\u53ef\u80fd\u9886\u7528\u8d44\u4ea7\u7684\u4eba\uff0c\u4eba\u5458\u7684\u4fe1\u606f\u5305\u62ec\u4eba\u5458\u7f16\u53f7\u3001\u59d3\u540d\u3001\u804c\u52a1\u548c\u5907\u6ce8\u3002\n\n\n\n\n\n\n\u8d44\u4ea7\u7684\u9886\u7528\n\n\n\u5df2\u7ecf\u767b\u8bb0\u7684\u4eba\u5458\uff0c\u53ef\u4ee5\u9886\u7528\u56fa\u5b9a\u8d44\u4ea7\uff0c\u9886\u7528\u65f6\u9700\u8981\u8bb0\u5f55\u7684\u4fe1\u606f\u6709\uff1a\u8bbe\u5907\u7f16\u53f7\u3001\u9886\u7528\u65e5\u671f\u3001\u7ba1\u7406\u5458\u3001\u7528\u9014\u3001\u5907\u6ce8\u3002\u53ea\u6709\u72b6\u6001\u4e3a\u6b63\u5e38\u4e14\u4f7f\u7528\u8005\u4e3a\u7a7a\u7684\u8d44\u4ea7\u624d\u80fd\u88ab\u9886\u7528\uff0c\u5728\u7ef4\u4fee\u6216\u8005\u5df2\u7ecf\u62a5\u5e9f\u7684\u8d44\u4ea7\u4e0d\u80fd\u591f\u9886\u7528\u3002\n\n\n\n\n\n\n\u8d44\u4ea7\u7684\u5f52\u8fd8\n    \u8d44\u4ea7\u4f7f\u7528\u5b8c\u6bd5\u540e\u8981\u5f52\u8fd8\u7ed9\u7ba1\u7406\u5458\uff0c\u9700\u8981\u8bb0\u5f55\u5982\u4e0b\u4fe1\u606f\uff1a\u8bbe\u5907\u7f16\u53f7\uff0c\u5f52\u8fd8\u65e5\u671f\uff0c\u7ba1\u7406\u5458\u3002\n\n\n\n\n\n\n\u8d44\u4ea7\u4fe1\u606f\u6d4f\u89c8\u548c\u67e5\u8be2 \n\n\n\n\n\n\n\u6309\u8d44\u4ea7\u7c7b\u522b\u6d4f\u89c8\uff1a\n    \u5206\u7c7b\u5206\u6210\u4e24\u7ea7\uff0c\u8981\u6c42\u80fd\u663e\u793a\u5927\u7c7b\u548c\u5c0f\u7c7b\u4e0b\u9762\u7684\u8d44\u4ea7\u60c5\u51b5\uff0c\u8d44\u4ea7\u72b6\u51b5\u3002\n\n\n\n\n\n\n\u67e5\u8be2\u8d44\u4ea7\u4fe1\u606f\uff1a\n    \u53ef\u4ee5\u6309\u7167\u8d44\u4ea7\u7f16\u53f7\u3001\u8d44\u4ea7\u7c7b\u522b\u3001\u4f7f\u7528\u8005\u67e5\u8be2\u8be6\u7ec6\u4fe1\u606f\u3002\u6309\u7167\u4f7f\u7528\u8005\u67e5\u8be2\u663e\u793a\u8be5\u4eba\u5458\u9886\u7528\u7684\u6240\u6709\u8d44\u4ea7", 
            "title": "Requirement Analysis"
        }, 
        {
            "location": "/RequirementAnalysis/#requirement-analysis", 
            "text": "This is the most important thing for us before developing. So let's have a look.", 
            "title": "Requirement Analysis"
        }, 
        {
            "location": "/RequirementAnalysis/#references", 
            "text": "We just using teacher's document as our reference. And we also search some words from the internet.    FixedAssets:  which value more than 2000\uffe5\u3002    raw document:\n    \u968f\u7740\u516c\u53f8\u4e1a\u52a1\u4e0d\u65ad\u53d1\u5c55\uff0c\u4eba\u5458\u8d8a\u6765\u8d8a\u591a\uff0c\u56fa\u5b9a\u8d44\u4ea7\u7684\u7ba1\u7406\u4eba\u5458\u538b\u529b\u9010\u6e10\u589e\u5927\uff0c\u9700\u8981\u5efa\u7acb\u6570\u636e\u5e93\u548c\u4f7f\u7528\u8f6f\u4ef6\u7cfb\u7edf\u6765\u8fdb\u884c\u7ba1\u7406\u3002", 
            "title": "References"
        }, 
        {
            "location": "/RequirementAnalysis/#functions", 
            "text": "\u7ba1\u7406\u5458\u767b\u5f55:\n    \u8981\u4f7f\u7528\u672c\u7cfb\u7edf\u5fc5\u987b\u5148\u767b\u5f55\uff0c\u5e76\u4e14\u53ea\u6709\u56fa\u5b9a\u8d44\u4ea7\u7ba1\u7406\u5458\u80fd\u591f\u767b\u5f55\u3002\u767b\u5f55\u7684\u65f6\u5019\u9700\u8981\u586b\u5199\u6b63\u786e\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u4fee\u6539\u81ea\u5df1\u7684\u5bc6\u7801\u3002\u7cfb\u7edf\u5141\u8bb8\u6709\u591a\u4e2a\u56fa\u5b9a\u8d44\u4ea7\u7684\u7ba1\u7406\u5458\uff0c\u6bcf\u4e2a\u7ba1\u7406\u5458\u7684\u6743\u9650\u76f8\u540c\u3002    \u56fa\u5b9a\u8d44\u4ea7\u4fe1\u606f\u7ba1\u7406          \u56fa\u5b9a\u8d44\u4ea7\u7c7b\u522b\u7ba1\u7406\uff1a  \u56fa\u5b9a\u8d44\u4ea7\u7684\u7c7b\u522b\u5728\u5f55\u5165\u8d44\u4ea7\u4fe1\u606f\u4e4b\u524d\u5c31\u5b9a\u4e49\u597d\uff0c\u5f55\u5165\u8d44\u4ea7\u4fe1\u606f\u4e4b\u540e\u53ef\u4ee5\u589e\u52a0\u65b0\u7684\u7c7b\u522b\u3002\u7c7b\u522b\u8981\u6c42\u5206\u4e3a\u4e24\u7ea7\uff0c\u5982\u5927\u7c7b\u53ef\u4ee5\u662f\u529e\u516c\u5916\u8bbe\u3001\u6570\u7801\u4ea7\u54c1\u3001\u8ba1\u7b97\u673a\u7b49\uff1b\u5c0f\u7c7b\u5206\u4e3a\u529e\u516c\u5916\u8bbe\uff1a\u4f20\u771f\u673a\u3001\u590d\u5370\u673a\u3001\u6253\u5370\u673a\u3001\u5176\u5b83\uff1b\u6570\u7801\u4ea7\u54c1\uff1a\u6570\u7801\u76f8\u673a\u3001\u6295\u5f71\u4eea\uff1b\u8ba1\u7b97\u673a\uff1a\u7b14\u8bb0\u672c\u7535\u8111\u3001\u53f0\u5f0f\u673a\u3001\u670d\u52a1\u5668\u7b49\u3002\n\u7c7b\u522b\u5e94\u5141\u8bb8\u6dfb\u52a0\u548c\u5220\u9664\u64cd\u4f5c\u3002\n    - \u56fa\u5b9a\u8d44\u4ea7\u4fe1\u606f\u7ba1\u7406\uff1a  \u8d44\u4ea7\u7684\u4fe1\u606f\u5305\u62ec\u7f16\u53f7\u3001\u540d\u79f0\u3001\u7c7b\u522b\u3001\u578b\u53f7\u3001\u4ef7\u503c\u3001\u8d2d\u4e70\u65e5\u671f\u3001\u72b6\u6001\u3001\u4f7f\u7528\u8005\u3001\u5907\u6ce8\u7b49\u3002\u8d44\u4ea7\u578b\u53f7\u662f\u6587\u672c\u4fe1\u606f\uff0c\u8d44\u4ea7\u7684\u72b6\u6001\u5206\u4e3a\uff1a\u6b63\u5e38\u3001\u7ef4\u4fee\u3001\u62a5\u5e9f\uff0c\u4f7f\u7528\u8005\u4e3a\u7a7a\u8868\u793a\u8d44\u4ea7\u672a\u88ab\u4f7f\u7528\u3002\u8d44\u4ea7\u5e94\u5141\u8bb8\u6267\u884c\u6dfb\u52a0\u3001\u4fee\u6539\u548c\u5220\u9664\u64cd\u4f5c\u3002      \u4eba\u5458\u4fe1\u606f\u7ba1\u7406  \u8fd9\u91cc\u7684\u201c\u4eba\u5458\u201d\u662f\u6307\u53ef\u80fd\u9886\u7528\u8d44\u4ea7\u7684\u4eba\uff0c\u4eba\u5458\u7684\u4fe1\u606f\u5305\u62ec\u4eba\u5458\u7f16\u53f7\u3001\u59d3\u540d\u3001\u804c\u52a1\u548c\u5907\u6ce8\u3002    \u8d44\u4ea7\u7684\u9886\u7528  \u5df2\u7ecf\u767b\u8bb0\u7684\u4eba\u5458\uff0c\u53ef\u4ee5\u9886\u7528\u56fa\u5b9a\u8d44\u4ea7\uff0c\u9886\u7528\u65f6\u9700\u8981\u8bb0\u5f55\u7684\u4fe1\u606f\u6709\uff1a\u8bbe\u5907\u7f16\u53f7\u3001\u9886\u7528\u65e5\u671f\u3001\u7ba1\u7406\u5458\u3001\u7528\u9014\u3001\u5907\u6ce8\u3002\u53ea\u6709\u72b6\u6001\u4e3a\u6b63\u5e38\u4e14\u4f7f\u7528\u8005\u4e3a\u7a7a\u7684\u8d44\u4ea7\u624d\u80fd\u88ab\u9886\u7528\uff0c\u5728\u7ef4\u4fee\u6216\u8005\u5df2\u7ecf\u62a5\u5e9f\u7684\u8d44\u4ea7\u4e0d\u80fd\u591f\u9886\u7528\u3002    \u8d44\u4ea7\u7684\u5f52\u8fd8\n    \u8d44\u4ea7\u4f7f\u7528\u5b8c\u6bd5\u540e\u8981\u5f52\u8fd8\u7ed9\u7ba1\u7406\u5458\uff0c\u9700\u8981\u8bb0\u5f55\u5982\u4e0b\u4fe1\u606f\uff1a\u8bbe\u5907\u7f16\u53f7\uff0c\u5f52\u8fd8\u65e5\u671f\uff0c\u7ba1\u7406\u5458\u3002    \u8d44\u4ea7\u4fe1\u606f\u6d4f\u89c8\u548c\u67e5\u8be2     \u6309\u8d44\u4ea7\u7c7b\u522b\u6d4f\u89c8\uff1a\n    \u5206\u7c7b\u5206\u6210\u4e24\u7ea7\uff0c\u8981\u6c42\u80fd\u663e\u793a\u5927\u7c7b\u548c\u5c0f\u7c7b\u4e0b\u9762\u7684\u8d44\u4ea7\u60c5\u51b5\uff0c\u8d44\u4ea7\u72b6\u51b5\u3002    \u67e5\u8be2\u8d44\u4ea7\u4fe1\u606f\uff1a\n    \u53ef\u4ee5\u6309\u7167\u8d44\u4ea7\u7f16\u53f7\u3001\u8d44\u4ea7\u7c7b\u522b\u3001\u4f7f\u7528\u8005\u67e5\u8be2\u8be6\u7ec6\u4fe1\u606f\u3002\u6309\u7167\u4f7f\u7528\u8005\u67e5\u8be2\u663e\u793a\u8be5\u4eba\u5458\u9886\u7528\u7684\u6240\u6709\u8d44\u4ea7", 
            "title": "Functions"
        }, 
        {
            "location": "/DatabaseDesign/", 
            "text": "Database Design\n\n\nThis is also very important for the whole development. So we designed it reference our requirement analysis.\n\n\nEntity-Relationship View\n\n\n\n\nDatabase Table Property Details\n\n\n\n\n\n\n\u8d44\u4ea7\u5927\u7c7b\u4fe1\u606f\u8868\nclass\n:  \n\n\n\n\nclass_id\n: \u5927\u7c7b\u7684\u7c7b\u7f16\u53f7\n\n\nclas_name\n: \u5927\u7c7b\u7684\u7c7b\u540d\u79f0\u5c5e\u6027\n\n\n\n\n\n\n\n\n\u8d44\u4ea7\u5c0f\u7c7b\u4fe1\u606f\u8868\nsub_class\n:   \n\n\n\n\nsub_class_id\n: \u5c0f\u7c7b\u7684\u7c7b\u7f16\u53f7\n\n\nsub_class_name\n: \u5c0f\u7c7b\u7684\u7c7b\u540d\u79f0\u5c5e\u6027\n\n\nclass_id\n: \u4f5c\u4e3a\u5916\u952e\u8d77\u5230\u7ea6\u675f\u4f5c\u7528\u7684\u5217\uff0c\u8868\u793a\u5c0f\u7c7b\u4ece\u5c5e\u4e8e\u54ea\u4e2a\u5927\u7c7b\n\n\n\n\n\n\n\n\n\u8d44\u4ea7\u5355\u9879\u4fe1\u606f\u8868\nfixed_assets\n:  \n\n\n\n\nassets_id\n: \u8d44\u4ea7\u7f16\u53f7\n\n\nassets_name\n: \u8d44\u4ea7\u540d\u79f0\n\n\nassets_catagory\n: \u8d44\u4ea7\u6240\u5c5e\u7684\u5c0f\u7c7b\u7684\u7c7b\u578b\uff0c\u56e0\u4e3a\u77e5\u9053\u4e86\u5c0f\u7c7b\uff0c\u5176\u6240\u5c5e\u7684\u5927\u7c7b\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\n\n\nassets_model\n:  \u8d44\u4ea7\u7684\u578b\u53f7\n\n\nassets_value\n:  \u8d44\u4ea7\u7684\u4ef7\u503c\u6216\u8005\u4ef7\u683c\n\n\nassets_purchase_date\n: \u8d44\u4ea7\u7684\u8d2d\u4e70\u65e5\u671f \n\n\nassets_state\n:  \u8d44\u4ea7\u7684\u72b6\u6001\u30020\u8868\u793a\u53ef\u501f\uff0c1\u8868\u793a\u7ef4\u4fee\uff0c2 \u8868\u793a\u62a5\u5e9f\u3002\n\n\nassets_user\n:   \u5df2\u501f\u51fa\u8d44\u4ea7\u7684\u6301\u6709\u4eba\u7f16\u53f7\uff0c\u672a\u501f\u51fa\u6b64\u9879\u4e3a\u7a7a\n\n\nassets_remark\n:  \u8d44\u4ea7\u5355\u9879\u7684\u5907\u6ce8\u4fe1\u606f\n\n\n\n\n\n\n\n\n\u8d44\u4ea7\u5916\u501f\u4fe1\u606f\u8868\nassets_out\n:    \n\n\n\n\nassets_out_id\n: \u8d44\u4ea7\u5916\u501f \u7f16\u53f7\u4fe1\u606f\n\n\nassets_id\n:     \u8d44\u4ea7\u7f16\u53f7\u4fe1\u606f\n\n\nassets_out_admin\n:   \u5904\u7406\u8d44\u4ea7\u5916\u501f\u7684\u7ba1\u7406\u5458\n\n\nassets_out_user\n:    \u8d44\u4ea7\u5916\u501f\u65f6\u7684\u4f7f\u7528\u4eba\u5458\u7684\u7f16\u53f7\n\n\nassets_out_date\n:    \u8d44\u4ea7\u5916\u501f\u65e5\u671f\n\n\nassets_out_purpose\n:   \u4f7f\u7528\u4eba\u5458\u501f\u7528\u8d44\u4ea7\u7684\u76ee\u7684\uff0c\u6216\u8005\u7528\u9014\n\n\nassets_out_remark\n:    \u8d44\u4ea7\u5916\u501f\u7684\u65f6\u5019\u7684\u5907\u6ce8\u4fe1\u606f\n\n\n\n\n\n\n\n\n\u8d44\u4ea7\u5f52\u8fd8\u8d44\u4ea7\u8868\nassets_in\n:     \n\n\n\n\nassets_in_id\n:  \u8d44\u4ea7\u5f52\u8fd8 \u7f16\u53f7\u4fe1\u606f\n\n\nassets_id\n:     \u5f52\u8fd8\u7684\u8d44\u4ea7\u7684\u7f16\u53f7\u4fe1\u606f\n\n\nassets_in_admin\n:  \u5904\u7406\u5f52\u8fd8\u8d44\u4ea7\u7684\u7ba1\u7406\u5458\u7684\u7f16\u53f7\n\n\nassets_in_user\n:   \u5f52\u8fd8\u8d44\u4ea7\u5355\u9879\u7684\u4f7f\u7528\u4eba\u5458\u7684\u7f16\u53f7\u4fe1\u606f\n\n\nassets_in_date\n:   \u8d44\u4ea7\u5355\u9879\u88ab\u5f52\u8fd8\u7684\u65e5\u671f\n\n\nassets_in_remark\n:   \u8d44\u4ea7\u5355\u9879\u88ab\u5f52\u8fd8\u7684\u5907\u6ce8\u4fe1\u606f\n\n\n\n\n\n\n\n\n\u7ba1\u7406\u5458\u4fe1\u606f\u8868\nadmin\n:          \n\n\n\n\nadmin_id\n:  \u7ba1\u7406\u5458\u8868\u7684\u7f16\u53f7\u4fe1\u606f\n\n\nadmin_name\n:  \u7ba1\u7406\u5458\u7684\u59d3\u540d\n\n\nadmin_password\n:  \u7ba1\u7406\u5458\u7684\u5bc6\u7801\u4fe1\u606f\n\n\n\n\n\n\n\n\n \u4f7f\u7528\u4eba\u5458\u4fe1\u606f\u8868\nuser\n:            \n\n\n\n\nuser_id\n:  \u4f7f\u7528\u4eba\u5458\u7684\u7f16\u53f7\u4fe1\u606f\n\n\nuser_name\n:  \u4f7f\u7528\u4eba\u5458\u7684\u540d\u79f0\n\n\nuser_job\n:  \u4f7f\u7528\u4eba\u5458\u7684\u804c\u4f4d\n\n\nuser_remark\n:  \u4f7f\u7528\u4eba\u5458\u672c\u8eab\u7684\u5907\u6ce8\u4fe1\u606f", 
            "title": "Database Design"
        }, 
        {
            "location": "/DatabaseDesign/#database-design", 
            "text": "This is also very important for the whole development. So we designed it reference our requirement analysis.", 
            "title": "Database Design"
        }, 
        {
            "location": "/DatabaseDesign/#entity-relationship-view", 
            "text": "", 
            "title": "Entity-Relationship View"
        }, 
        {
            "location": "/DatabaseDesign/#database-table-property-details", 
            "text": "\u8d44\u4ea7\u5927\u7c7b\u4fe1\u606f\u8868 class :     class_id : \u5927\u7c7b\u7684\u7c7b\u7f16\u53f7  clas_name : \u5927\u7c7b\u7684\u7c7b\u540d\u79f0\u5c5e\u6027     \u8d44\u4ea7\u5c0f\u7c7b\u4fe1\u606f\u8868 sub_class :      sub_class_id : \u5c0f\u7c7b\u7684\u7c7b\u7f16\u53f7  sub_class_name : \u5c0f\u7c7b\u7684\u7c7b\u540d\u79f0\u5c5e\u6027  class_id : \u4f5c\u4e3a\u5916\u952e\u8d77\u5230\u7ea6\u675f\u4f5c\u7528\u7684\u5217\uff0c\u8868\u793a\u5c0f\u7c7b\u4ece\u5c5e\u4e8e\u54ea\u4e2a\u5927\u7c7b     \u8d44\u4ea7\u5355\u9879\u4fe1\u606f\u8868 fixed_assets :     assets_id : \u8d44\u4ea7\u7f16\u53f7  assets_name : \u8d44\u4ea7\u540d\u79f0  assets_catagory : \u8d44\u4ea7\u6240\u5c5e\u7684\u5c0f\u7c7b\u7684\u7c7b\u578b\uff0c\u56e0\u4e3a\u77e5\u9053\u4e86\u5c0f\u7c7b\uff0c\u5176\u6240\u5c5e\u7684\u5927\u7c7b\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86  assets_model :  \u8d44\u4ea7\u7684\u578b\u53f7  assets_value :  \u8d44\u4ea7\u7684\u4ef7\u503c\u6216\u8005\u4ef7\u683c  assets_purchase_date : \u8d44\u4ea7\u7684\u8d2d\u4e70\u65e5\u671f   assets_state :  \u8d44\u4ea7\u7684\u72b6\u6001\u30020\u8868\u793a\u53ef\u501f\uff0c1\u8868\u793a\u7ef4\u4fee\uff0c2 \u8868\u793a\u62a5\u5e9f\u3002  assets_user :   \u5df2\u501f\u51fa\u8d44\u4ea7\u7684\u6301\u6709\u4eba\u7f16\u53f7\uff0c\u672a\u501f\u51fa\u6b64\u9879\u4e3a\u7a7a  assets_remark :  \u8d44\u4ea7\u5355\u9879\u7684\u5907\u6ce8\u4fe1\u606f     \u8d44\u4ea7\u5916\u501f\u4fe1\u606f\u8868 assets_out :       assets_out_id : \u8d44\u4ea7\u5916\u501f \u7f16\u53f7\u4fe1\u606f  assets_id :     \u8d44\u4ea7\u7f16\u53f7\u4fe1\u606f  assets_out_admin :   \u5904\u7406\u8d44\u4ea7\u5916\u501f\u7684\u7ba1\u7406\u5458  assets_out_user :    \u8d44\u4ea7\u5916\u501f\u65f6\u7684\u4f7f\u7528\u4eba\u5458\u7684\u7f16\u53f7  assets_out_date :    \u8d44\u4ea7\u5916\u501f\u65e5\u671f  assets_out_purpose :   \u4f7f\u7528\u4eba\u5458\u501f\u7528\u8d44\u4ea7\u7684\u76ee\u7684\uff0c\u6216\u8005\u7528\u9014  assets_out_remark :    \u8d44\u4ea7\u5916\u501f\u7684\u65f6\u5019\u7684\u5907\u6ce8\u4fe1\u606f     \u8d44\u4ea7\u5f52\u8fd8\u8d44\u4ea7\u8868 assets_in :        assets_in_id :  \u8d44\u4ea7\u5f52\u8fd8 \u7f16\u53f7\u4fe1\u606f  assets_id :     \u5f52\u8fd8\u7684\u8d44\u4ea7\u7684\u7f16\u53f7\u4fe1\u606f  assets_in_admin :  \u5904\u7406\u5f52\u8fd8\u8d44\u4ea7\u7684\u7ba1\u7406\u5458\u7684\u7f16\u53f7  assets_in_user :   \u5f52\u8fd8\u8d44\u4ea7\u5355\u9879\u7684\u4f7f\u7528\u4eba\u5458\u7684\u7f16\u53f7\u4fe1\u606f  assets_in_date :   \u8d44\u4ea7\u5355\u9879\u88ab\u5f52\u8fd8\u7684\u65e5\u671f  assets_in_remark :   \u8d44\u4ea7\u5355\u9879\u88ab\u5f52\u8fd8\u7684\u5907\u6ce8\u4fe1\u606f     \u7ba1\u7406\u5458\u4fe1\u606f\u8868 admin :             admin_id :  \u7ba1\u7406\u5458\u8868\u7684\u7f16\u53f7\u4fe1\u606f  admin_name :  \u7ba1\u7406\u5458\u7684\u59d3\u540d  admin_password :  \u7ba1\u7406\u5458\u7684\u5bc6\u7801\u4fe1\u606f      \u4f7f\u7528\u4eba\u5458\u4fe1\u606f\u8868 user :               user_id :  \u4f7f\u7528\u4eba\u5458\u7684\u7f16\u53f7\u4fe1\u606f  user_name :  \u4f7f\u7528\u4eba\u5458\u7684\u540d\u79f0  user_job :  \u4f7f\u7528\u4eba\u5458\u7684\u804c\u4f4d  user_remark :  \u4f7f\u7528\u4eba\u5458\u672c\u8eab\u7684\u5907\u6ce8\u4fe1\u606f", 
            "title": "Database Table Property Details"
        }, 
        {
            "location": "/Classes/", 
            "text": "Classes View\n\n\nUML can explain so many classes. So clear it is.\n\n\nEntity\n\n\nEntities is created by referencing database tables.\n\n\n\n\nDao\n\n\nExcept basic opertions CRUD,there are so many interfaces in this package, which can depend on how we implments them.\n\n\n\nDaoImpl\n\n\nDaoImplments is the implements of dao interface. It's the burdge between Service and Database\nentity\u3002 \n\n\n\nService\n\n\nOur Business is begin at here. Call those methods is very easy. It's mandatory to set  them well.\n\n\n\nType Hierachy\n\n\nHierachy is a good way to optimize our code. We can have a clear mind to solve those boring problems. And we can also read other's logic easily. It's very very important for our teamwork.Don't you think so?", 
            "title": "Classes"
        }, 
        {
            "location": "/Classes/#classes-view", 
            "text": "UML can explain so many classes. So clear it is.", 
            "title": "Classes View"
        }, 
        {
            "location": "/Classes/#entity", 
            "text": "Entities is created by referencing database tables.", 
            "title": "Entity"
        }, 
        {
            "location": "/Classes/#dao", 
            "text": "Except basic opertions CRUD,there are so many interfaces in this package, which can depend on how we implments them.", 
            "title": "Dao"
        }, 
        {
            "location": "/Classes/#daoimpl", 
            "text": "DaoImplments is the implements of dao interface. It's the burdge between Service and Database entity\u3002", 
            "title": "DaoImpl"
        }, 
        {
            "location": "/Classes/#service", 
            "text": "Our Business is begin at here. Call those methods is very easy. It's mandatory to set  them well.", 
            "title": "Service"
        }, 
        {
            "location": "/Classes/#type-hierachy", 
            "text": "Hierachy is a good way to optimize our code. We can have a clear mind to solve those boring problems. And we can also read other's logic easily. It's very very important for our teamwork.Don't you think so?", 
            "title": "Type Hierachy"
        }, 
        {
            "location": "/ProjectStructureAndHierachy/", 
            "text": "Project Structure And Project Hierachy\n\n\nWe all konw that the structure is very important. It's the core of one software.\n\n\nProject Hierachy\n\n\nLike the picture as follows, it's the hierachy of our homework.\n\n\n\n\nProject Structure\n\n\nThe project directories is necessary for us to have a look.\n\n\nFixedAssetsManageSystem:   # Our Homework Overview\n    - src/\n        - dao/                            Interfaces for CRUD\n            - AdminDao.java    \n            - AssetsDao.java\n            - BaseDao.java\n            - UserDao.java\n        - dao.impl/                       Implements of DAO\n            - AdminDaoImpl.java\n            - AssetsDaoImpl.java\n            - ClazzDaoImpl.java\n            - UserDaoImpl.java\n        - entity/                         Entity for database table\n            - Admin.java\n            - Clazz.java\n            - FIxedAssets.java\n            - SubClass.java\n            - User.java\n            - todo.txt\n        - entrance/                        The entrance of this software\n            - Main.java\n        - service/                         For Business using\n            - AdminBusiness.java\n            - AssetsManager.java\n            - CatagoryBusiness.java\n            - UserBusiness.java\n        - util/                            Utils for coding in some methods\n            - AssignmentTool.java\n            - DateFormat.java\n            - ConnectionFactory.java\n            - JDBCPool.java\n    - test/                                My Code Test\n        - dao.impl.test/\n            - \u00b7\u00b7\u00b7\n        - util.test/\n            - \u00b7\u00b7\u00b7\n    - JRE System Library/                 Java Runtime Environment\n    - Referenced Libraries/               Java Referenced Lbraries\n    - JUnit 4/                            @Test using\n    - document/\n    - lib/                                Necessary for Coding\n        - apache-commons-DbUtils.jar\n        - mysql-connector.java\n\n\n\nMain structure\n\n\n\n\nSome jars and dependency\n\n\n\n\nThe Details", 
            "title": "Project Structure & Project Hierachy"
        }, 
        {
            "location": "/ProjectStructureAndHierachy/#project-structure-and-project-hierachy", 
            "text": "We all konw that the structure is very important. It's the core of one software.", 
            "title": "Project Structure And Project Hierachy"
        }, 
        {
            "location": "/ProjectStructureAndHierachy/#project-hierachy", 
            "text": "Like the picture as follows, it's the hierachy of our homework.", 
            "title": "Project Hierachy"
        }, 
        {
            "location": "/ProjectStructureAndHierachy/#project-structure", 
            "text": "The project directories is necessary for us to have a look.  FixedAssetsManageSystem:   # Our Homework Overview\n    - src/\n        - dao/                            Interfaces for CRUD\n            - AdminDao.java    \n            - AssetsDao.java\n            - BaseDao.java\n            - UserDao.java\n        - dao.impl/                       Implements of DAO\n            - AdminDaoImpl.java\n            - AssetsDaoImpl.java\n            - ClazzDaoImpl.java\n            - UserDaoImpl.java\n        - entity/                         Entity for database table\n            - Admin.java\n            - Clazz.java\n            - FIxedAssets.java\n            - SubClass.java\n            - User.java\n            - todo.txt\n        - entrance/                        The entrance of this software\n            - Main.java\n        - service/                         For Business using\n            - AdminBusiness.java\n            - AssetsManager.java\n            - CatagoryBusiness.java\n            - UserBusiness.java\n        - util/                            Utils for coding in some methods\n            - AssignmentTool.java\n            - DateFormat.java\n            - ConnectionFactory.java\n            - JDBCPool.java\n    - test/                                My Code Test\n        - dao.impl.test/\n            - \u00b7\u00b7\u00b7\n        - util.test/\n            - \u00b7\u00b7\u00b7\n    - JRE System Library/                 Java Runtime Environment\n    - Referenced Libraries/               Java Referenced Lbraries\n    - JUnit 4/                            @Test using\n    - document/\n    - lib/                                Necessary for Coding\n        - apache-commons-DbUtils.jar\n        - mysql-connector.java", 
            "title": "Project Structure"
        }, 
        {
            "location": "/ProjectStructureAndHierachy/#main-structure", 
            "text": "", 
            "title": "Main structure"
        }, 
        {
            "location": "/ProjectStructureAndHierachy/#some-jars-and-dependency", 
            "text": "", 
            "title": "Some jars and dependency"
        }, 
        {
            "location": "/ProjectStructureAndHierachy/#the-details", 
            "text": "", 
            "title": "The Details"
        }, 
        {
            "location": "/GenericParadigm/", 
            "text": "The Usage of Generic Paragidm\n\n\nGeneric Paradigm exists in java from JDK1.5 and later. It brings so many convenient for us coder.\n\n\nsample 1\n\n\npackage dao;\n\nimport java.util.List;\n\n/**\n * \u7528\u4e8e\u589e\u5220\u6539\u67e5\u4fe1\u606f\u7684\u62bd\u8c61\u57fa\u7c7b\n * \n * @author \u90ed\u745e\u5f6a\n *\n */\npublic class BaseDao\nT\n {\n\n    /**\n     * \u6dfb\u52a0\u4e00\u6761\u6570\u636e\u9879\n     * \n     * @param bean\n     */\n    public boolean add(T bean) {\n        return false;\n    }\n\n    /**\n     * \u5220\u9664\u4e00\u4e2a\u6570\u636e\u9879\n     * \n     * @param bean\n     */\n    public boolean delete(T bean) {\n        return false;\n    }\n\n    /**\n     * \u4fee\u6539\u4e00\u4e2a\u6570\u636e\u9879\n     * \n     * @param bean\n     */\n    public boolean modify(T bean) {\n        return false;\n    }\n\n    /**\n     * \u6839\u636e\u67e5\u8be2\u6761\u4ef6\u83b7\u53d6\u4e00\u4e2a\u6570\u636e\u9879\n     * \n     * @param str\n     * @return\n     */\n    public T get(T str) {\n        return null;\n    }\n\n    /**\n     * \u6839\u636e\u67e5\u8be2\u6761\u4ef6\u83b7\u53d6\u6240\u6709\u7684\u6570\u636e\u9879\n     * \n     * @param str\n     * @return\n     */\n    public List\nT\n getAll(T str) {\n        return null;\n    }\n\n}\n\n\n\nSample 2\n\n\n\n    /**\n     * \u6839\u636e\u7528\u6237\u7684\u7528\u6237\u7f16\u53f7\u6765\u5b9e\u73b0\u83b7\u53d6\u8be5\u7528\u6237\u540d\u4e0b\u501f\u7528\u7684\u6240\u6709\u8d44\u4ea7\u7684\u5217\u8868\n     */\n    @Override\n    public List\nFixedAssets\n findByUser(int userID) {\n        try {\n            String sql = \nselect * from fixed_assets where assets_user = '\n + userID + \n'\n;\n            Connection conn = ConnectionFactory.getConnection();\n            ResultSet rs = conn.createStatement().executeQuery(sql);\n            List\nFixedAssets\n ls = AssignmentTool.assignment2BeanList(rs);\n            return ls != null ? ls : null;\n        } catch (Exception e) {\n            throw new RuntimeException(\n\u6839\u636e\u7528\u6237\u7f16\u53f7\u6765\u83b7\u53d6\u8d44\u4ea7\u5355\u9879\u7684\u8be6\u7ec6\u4fe1\u606f\u7684\u65f6\u5019\u51fa\u9519\u4e86\uff01\\n\n + e);\n        }\n    }\n\n\n\n\n\nSample 3\n\n\n/**\n * \u7f57\u5217\u51fa\u6240\u6709\u7684\u5c0f\u7c7b\u7684\u4fe1\u606f\n */\n@Override\npublic List\nSubClass\n findBySubClass(String subclassName) {\n    try {\n        String sql = \"select sub_class_name,class_id from sub_class where sub_class_name = '\" + subclassName + \"'\";\n        Connection conn = ConnectionFactory.getConnection();\n        ResultSet rs = conn.createStatement().executeQuery(sql);\n        List\nSubClass\n ls = new ArrayList\nSubClass\n();\n        while (rs.next()) {\n            SubClass subclass = new SubClass();\n            subclass.setName(rs.getString(\"sub_class_name\"));\n            int class_id = rs.getInt(\"class_id\");\n            subclass.setClazzName(ClazzDaoImpl.getClassNameById(class_id));\n            ls.add(subclass);\n        }\n        return ls != null ? ls : null;\n    } catch (Exception e) {\n        throw new RuntimeException(\"\u6839\u636e\u5c0f\u7c7b\u5c5e\u6027\u67e5\u627e\u6240\u6709\u4fe1\u606f\u5931\u8d25\uff01\" + e);\n    }\n}\n\n\n\n\n\nSample 4\n\n\n/**\n * \u5c06\u4ece\u6570\u636e\u5e93\u4e2d\u83b7\u5f97\u7684\u7ed3\u679c\u96c6\u8f6c\u6362\u6210\u4e00\u4e2a\u88c5\u6709\u8fd4\u56de\u7ed3\u679c\u7684List\u96c6\u5408\n * \n * @param rs\n * @return\n */\npublic static List\nFixedAssets\n assignment2BeanList(ResultSet rs) {\n    try {\n\n        List\nFixedAssets\n lists = new ArrayList\nFixedAssets\n();\n        while (rs.next()) {\n            FixedAssets fas = new FixedAssets();\n            fas.setName(rs.getString(\"assets_name\"));\n            fas.setCatagory(rs.getInt(\"assets_catagory\"));\n            fas.setModel(rs.getString(\"assets_model\"));\n            fas.setValue(rs.getInt(\"assets_value\"));\n            fas.setPurchaseDate(rs.getDate(\"assets_purchase_date\"));\n            fas.setState(rs.getInt(\"assets_state\"));\n            fas.setUser(rs.getInt(\"assets_user\"));\n            fas.setRemark(rs.getString(\"assets_remark\"));\n            lists.add(fas);\n        }\n        return lists;\n    } catch (Exception e) {\n        throw new RuntimeException(\"ResultSet to Bean Error\uff01\\n\" + e);\n    }\n}\n\n\n\nSample 5\n\n\npublic static List\nObject\n result2BeanList(ResultSet rs, String classType) {\n    try {\n        List\nObject\n list = new ArrayList\nObject\n();\n        while (rs.next()) {\n            Object obj = null;\n            if (classType.equals(\"Clazz\")) {\n                obj = new Clazz();\n                ((Clazz) obj).setName(rs.getString(\"class_name\"));\n            } else if (classType.equals(\"SubClass\")) {\n                obj = new SubClass();\n                ((SubClass) obj).setClazzName(rs.getString(\"class_name\"));\n                ((SubClass) obj).setName(rs.getString(\"sub_class_name\"));\n            }\n            list.add(obj);\n        }\n        if (list != null) {\n            return list;\n        }\n    } catch (Exception e) {\n        throw new RuntimeException(\"\u7ed3\u679c\u96c6\u8f6c\u6362\u6210BeanList\u65f6\u5931\u8d25\uff01\\n\" + e);\n    }\n    return null;\n}\n\n\n\nSample 6\n\n\n/*\n * \u65e2\u7136\u662f\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u6c60\uff0c\u5c31\u5fc5\u987b\u6709\u8bb8\u591a\u7684\u8fde\u63a5\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u96c6\u5408\u7c7b\u4fdd\u5b58\u8fd9\u4e9b\u8fde\u63a5 (non-Javadoc)\n * \n * @see javax.sql.CommonDataSource#getLogWriter()\n */\nprivate static LinkedList\nConnection\n list = new LinkedList\nConnection\n();", 
            "title": "The Usage of Generic paradigm"
        }, 
        {
            "location": "/GenericParadigm/#the-usage-of-generic-paragidm", 
            "text": "Generic Paradigm exists in java from JDK1.5 and later. It brings so many convenient for us coder.", 
            "title": "The Usage of Generic Paragidm"
        }, 
        {
            "location": "/GenericParadigm/#sample-1", 
            "text": "package dao;\n\nimport java.util.List;\n\n/**\n * \u7528\u4e8e\u589e\u5220\u6539\u67e5\u4fe1\u606f\u7684\u62bd\u8c61\u57fa\u7c7b\n * \n * @author \u90ed\u745e\u5f6a\n *\n */\npublic class BaseDao T  {\n\n    /**\n     * \u6dfb\u52a0\u4e00\u6761\u6570\u636e\u9879\n     * \n     * @param bean\n     */\n    public boolean add(T bean) {\n        return false;\n    }\n\n    /**\n     * \u5220\u9664\u4e00\u4e2a\u6570\u636e\u9879\n     * \n     * @param bean\n     */\n    public boolean delete(T bean) {\n        return false;\n    }\n\n    /**\n     * \u4fee\u6539\u4e00\u4e2a\u6570\u636e\u9879\n     * \n     * @param bean\n     */\n    public boolean modify(T bean) {\n        return false;\n    }\n\n    /**\n     * \u6839\u636e\u67e5\u8be2\u6761\u4ef6\u83b7\u53d6\u4e00\u4e2a\u6570\u636e\u9879\n     * \n     * @param str\n     * @return\n     */\n    public T get(T str) {\n        return null;\n    }\n\n    /**\n     * \u6839\u636e\u67e5\u8be2\u6761\u4ef6\u83b7\u53d6\u6240\u6709\u7684\u6570\u636e\u9879\n     * \n     * @param str\n     * @return\n     */\n    public List T  getAll(T str) {\n        return null;\n    }\n\n}", 
            "title": "sample 1"
        }, 
        {
            "location": "/GenericParadigm/#sample-2", 
            "text": "/**\n     * \u6839\u636e\u7528\u6237\u7684\u7528\u6237\u7f16\u53f7\u6765\u5b9e\u73b0\u83b7\u53d6\u8be5\u7528\u6237\u540d\u4e0b\u501f\u7528\u7684\u6240\u6709\u8d44\u4ea7\u7684\u5217\u8868\n     */\n    @Override\n    public List FixedAssets  findByUser(int userID) {\n        try {\n            String sql =  select * from fixed_assets where assets_user = '  + userID +  ' ;\n            Connection conn = ConnectionFactory.getConnection();\n            ResultSet rs = conn.createStatement().executeQuery(sql);\n            List FixedAssets  ls = AssignmentTool.assignment2BeanList(rs);\n            return ls != null ? ls : null;\n        } catch (Exception e) {\n            throw new RuntimeException( \u6839\u636e\u7528\u6237\u7f16\u53f7\u6765\u83b7\u53d6\u8d44\u4ea7\u5355\u9879\u7684\u8be6\u7ec6\u4fe1\u606f\u7684\u65f6\u5019\u51fa\u9519\u4e86\uff01\\n  + e);\n        }\n    }", 
            "title": "Sample 2"
        }, 
        {
            "location": "/GenericParadigm/#sample-3", 
            "text": "/**\n * \u7f57\u5217\u51fa\u6240\u6709\u7684\u5c0f\u7c7b\u7684\u4fe1\u606f\n */\n@Override\npublic List SubClass  findBySubClass(String subclassName) {\n    try {\n        String sql = \"select sub_class_name,class_id from sub_class where sub_class_name = '\" + subclassName + \"'\";\n        Connection conn = ConnectionFactory.getConnection();\n        ResultSet rs = conn.createStatement().executeQuery(sql);\n        List SubClass  ls = new ArrayList SubClass ();\n        while (rs.next()) {\n            SubClass subclass = new SubClass();\n            subclass.setName(rs.getString(\"sub_class_name\"));\n            int class_id = rs.getInt(\"class_id\");\n            subclass.setClazzName(ClazzDaoImpl.getClassNameById(class_id));\n            ls.add(subclass);\n        }\n        return ls != null ? ls : null;\n    } catch (Exception e) {\n        throw new RuntimeException(\"\u6839\u636e\u5c0f\u7c7b\u5c5e\u6027\u67e5\u627e\u6240\u6709\u4fe1\u606f\u5931\u8d25\uff01\" + e);\n    }\n}", 
            "title": "Sample 3"
        }, 
        {
            "location": "/GenericParadigm/#sample-4", 
            "text": "/**\n * \u5c06\u4ece\u6570\u636e\u5e93\u4e2d\u83b7\u5f97\u7684\u7ed3\u679c\u96c6\u8f6c\u6362\u6210\u4e00\u4e2a\u88c5\u6709\u8fd4\u56de\u7ed3\u679c\u7684List\u96c6\u5408\n * \n * @param rs\n * @return\n */\npublic static List FixedAssets  assignment2BeanList(ResultSet rs) {\n    try {\n\n        List FixedAssets  lists = new ArrayList FixedAssets ();\n        while (rs.next()) {\n            FixedAssets fas = new FixedAssets();\n            fas.setName(rs.getString(\"assets_name\"));\n            fas.setCatagory(rs.getInt(\"assets_catagory\"));\n            fas.setModel(rs.getString(\"assets_model\"));\n            fas.setValue(rs.getInt(\"assets_value\"));\n            fas.setPurchaseDate(rs.getDate(\"assets_purchase_date\"));\n            fas.setState(rs.getInt(\"assets_state\"));\n            fas.setUser(rs.getInt(\"assets_user\"));\n            fas.setRemark(rs.getString(\"assets_remark\"));\n            lists.add(fas);\n        }\n        return lists;\n    } catch (Exception e) {\n        throw new RuntimeException(\"ResultSet to Bean Error\uff01\\n\" + e);\n    }\n}", 
            "title": "Sample 4"
        }, 
        {
            "location": "/GenericParadigm/#sample-5", 
            "text": "public static List Object  result2BeanList(ResultSet rs, String classType) {\n    try {\n        List Object  list = new ArrayList Object ();\n        while (rs.next()) {\n            Object obj = null;\n            if (classType.equals(\"Clazz\")) {\n                obj = new Clazz();\n                ((Clazz) obj).setName(rs.getString(\"class_name\"));\n            } else if (classType.equals(\"SubClass\")) {\n                obj = new SubClass();\n                ((SubClass) obj).setClazzName(rs.getString(\"class_name\"));\n                ((SubClass) obj).setName(rs.getString(\"sub_class_name\"));\n            }\n            list.add(obj);\n        }\n        if (list != null) {\n            return list;\n        }\n    } catch (Exception e) {\n        throw new RuntimeException(\"\u7ed3\u679c\u96c6\u8f6c\u6362\u6210BeanList\u65f6\u5931\u8d25\uff01\\n\" + e);\n    }\n    return null;\n}", 
            "title": "Sample 5"
        }, 
        {
            "location": "/GenericParadigm/#sample-6", 
            "text": "/*\n * \u65e2\u7136\u662f\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u6c60\uff0c\u5c31\u5fc5\u987b\u6709\u8bb8\u591a\u7684\u8fde\u63a5\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u96c6\u5408\u7c7b\u4fdd\u5b58\u8fd9\u4e9b\u8fde\u63a5 (non-Javadoc)\n * \n * @see javax.sql.CommonDataSource#getLogWriter()\n */\nprivate static LinkedList Connection  list = new LinkedList Connection ();", 
            "title": "Sample 6"
        }, 
        {
            "location": "/UserInterfaceShow/", 
            "text": "User Interface Show\n\n\n\u6211\u4eec\u91c7\u53d6\u4e86\u5206\u9875\u673a\u5236\u4ee5\u53ca\u9762\u5305\u5c51\u5bfc\u822a\uff0c\u6765\u7ed9\u7528\u6237\u4e00\u4e2a\u66f4\u52a0\u8212\u9002\u7684\u7528\u6237\u4f53\u9a8c\u3002\u5177\u4f53\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u9762\u7684\u622a\u56fe\u4e2d\u770b\u51fa\u6765\u3002\n\n\nWe made the permission system carefully,such as.\n\n\n1\u3001Admin Login\n\n\nOnly Admin can login this system for managing.\n\n\nChange the Admin's Password.\n\n\n\n2\u3001Fixed Assets Management\n\n\nFixed Assets management is simple full of CRUD.\n\n\na) By Catagory\n\n\nclass add:\n\n\n\nClass add result:\n\n\n\nClass Delete:\n\n\n\nGet all the classes:\n\n\n\n\n\nClass management:\n\n\n\nb) By Assets Info\n\n\nAssets Add:\n\n\n\nAssets add result:\n\n\n\nAssets Delete:\n\n\n\nFind Assets By Class:\n\n\n\nFind Assets by SubClass:\n\n\n\n3\u3001User Info Management\n\n\nThe User management is controlled by admin.\n\n\nUser Add:\n\n\n\nUser Deleted:\n\n\n\n\nGet All User list:\n\n\n\nUser Management:\n\n\n\n4\u3001Assets Rent Out\n\n\nLend get all:\n\n\n\nLend Get not Return:\n\n\n\nLend result log\n\n\n\nLend Out table\uff1a\n\n\n\n5\u3001Assets Return Back\n\n\nHere you can see the return back info log.\n\n\n\nReturn get all:\n\n\n\nReturn Back:\n\n\n\nReturn Back Result:\n\n\n\n6\u3001Assets List \n Research\n\n\nThe core side function here.\n\n\nFind Assets By User ID:\n\n\n\nFind Assets By User Name:", 
            "title": "User Interface Show"
        }, 
        {
            "location": "/UserInterfaceShow/#user-interface-show", 
            "text": "\u6211\u4eec\u91c7\u53d6\u4e86\u5206\u9875\u673a\u5236\u4ee5\u53ca\u9762\u5305\u5c51\u5bfc\u822a\uff0c\u6765\u7ed9\u7528\u6237\u4e00\u4e2a\u66f4\u52a0\u8212\u9002\u7684\u7528\u6237\u4f53\u9a8c\u3002\u5177\u4f53\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u9762\u7684\u622a\u56fe\u4e2d\u770b\u51fa\u6765\u3002  We made the permission system carefully,such as.", 
            "title": "User Interface Show"
        }, 
        {
            "location": "/UserInterfaceShow/#1admin-login", 
            "text": "Only Admin can login this system for managing.  Change the Admin's Password.", 
            "title": "1\u3001Admin Login"
        }, 
        {
            "location": "/UserInterfaceShow/#2fixed-assets-management", 
            "text": "Fixed Assets management is simple full of CRUD.", 
            "title": "2\u3001Fixed Assets Management"
        }, 
        {
            "location": "/UserInterfaceShow/#a-by-catagory", 
            "text": "class add:  Class add result:  Class Delete:  Get all the classes:   Class management:", 
            "title": "a) By Catagory"
        }, 
        {
            "location": "/UserInterfaceShow/#b-by-assets-info", 
            "text": "Assets Add:  Assets add result:  Assets Delete:  Find Assets By Class:  Find Assets by SubClass:", 
            "title": "b) By Assets Info"
        }, 
        {
            "location": "/UserInterfaceShow/#3user-info-management", 
            "text": "The User management is controlled by admin.  User Add:  User Deleted:   Get All User list:  User Management:", 
            "title": "3\u3001User Info Management"
        }, 
        {
            "location": "/UserInterfaceShow/#4assets-rent-out", 
            "text": "Lend get all:  Lend Get not Return:  Lend result log  Lend Out table\uff1a", 
            "title": "4\u3001Assets Rent Out"
        }, 
        {
            "location": "/UserInterfaceShow/#5assets-return-back", 
            "text": "Here you can see the return back info log.  Return get all:  Return Back:  Return Back Result:", 
            "title": "5\u3001Assets Return Back"
        }, 
        {
            "location": "/UserInterfaceShow/#6assets-list-research", 
            "text": "The core side function here.  Find Assets By User ID:  Find Assets By User Name:", 
            "title": "6\u3001Assets List &amp; Research"
        }, 
        {
            "location": "/Experience/", 
            "text": "Our Experience\n\n\n\u4e0b\u9762\u8c08\u8c08\u5b8c\u6210\u6b64\u6b21\u5927\u4f5c\u4e1a\u7684\u4e00\u4e9b\u611f\u609f\u5427\u3002\n\n\n\u90ed\u745e\u5f6a\u7684\u611f\u609f\n\n\n\u53cd\u601d\n\n\n\u5c0f\u5b66\u671f\u521a\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u89c9\u5f97\u81ea\u5df1\u5b66\u4e86\nJava\n\u8fd9\u4e48\u4e45\u4e86\uff0c\u81ea\u8ba4\u4e3a\u5b66\u7684\u5f88\u597d\u4e86\u3002\u6240\u4ee5\u5c31\u6ca1\u600e\u4e48\u5728\u610f\u8bfe\u5802\u4e0a\u76f8\u5173\u77e5\u8bc6\u70b9\u7684\u8bb2\u89e3\u3002\u800c\u662f\u5b66\u4e00\u4e9b\u5176\u4ed6\u7684\u6bd4\u8f83\u65b0\u5947\u7684\u4e1c\u897f\uff0c\u867d\u7136\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u83b7\u53d6\u5230\u4e86\u66f4\u591a\u7684\u77e5\u8bc6\uff0c\u4f46\u662f\u5374\u6ca1\u80fd\u6253\u4e0b\u66f4\u52a0\u7262\u56fa\u7684\u6839\u57fa\uff0c\u73b0\u5728\u60f3\u60f3\u8fd9\u771f\u7684\u662f\u6709\u70b9\u201c\u62e3\u4e86\u829d\u9ebb\u4e22\u4e86\u897f\u74dc\u201d\u7684\u97f5\u5473\u3002\n\n\n\u5176\u5b9e\u4ed4\u7ec6\u7684\u601d\u8003\u4e00\u4e0b\uff0c\u8001\u9a6c\u5728\u8bfe\u5802\u4e0a\u6240\u8bb2\u7684\u57fa\u672c\u4e0a\u5168\u662f\u4f01\u4e1a\u7ea7\u6216\u8005\u5f00\u53d1\u7ea7\u8fd9\u4e2a\u5c42\u9762\u4e0a\u5e38\u7528\u7684\u6280\u672f\u3002\u76f8\u6bd4\u4e8e\u81ea\u5df1\u5b66\u4e60\u800c\u8a00\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u66f4\u52a0\u8d34\u8fd1\u4e8e\u771f\u5b9e\u6761\u4ef6\u4e0b\u8f6f\u4ef6\u7684\u5f00\u53d1\uff0c\u6240\u4ee5\u662f\u5f88\u6709\u5fc5\u8981\u7684\u3002\u867d\u7136\u81ea\u5df1\u5b66\u8fc7\u8fd9\u4e9b\u6240\u6709\u7684\u77e5\u8bc6\u70b9\uff0c\u4f46\u8fd8\u662f\u4f1a\u5f88\u6709\u7528\u7684\u3002\n\n\n\u5728\u6b64\uff0c\u6211\u6df1\u523b\u7684\u53cd\u601d\u81ea\u5df1\u8fd9\u79cd\u4e0d\u8ba4\u771f\u7684\u884c\u4e3a\uff0c\u786e\u5b9e\u662f\u5e94\u8be5\u9759\u4e0b\u5fc3\u6765\uff0c\u7a33\u624e\u7a33\u6253\u7684\u5b66\u4e00\u6ce2\u7684\u3002\n\n\n\u6536\u83b7\n\n\n\u8bf4\u5230\u6536\u83b7\uff0c\u8fd9\u5c31\u6709\u5f88\u591a\u4e86\u3002\n\n\n\u5148\u4ece\u8bfe\u5802\u4e0a\u5b66\u5230\u7684\u4e00\u4e2a\u5c0f\u6280\u5de7\u5427\u3002\u90a3\u662f\u4e00\u4e2a\u5173\u4e8e\nJDBC\n\u64cd\u4f5c\u7684\u5c0f\u4f8b\u5b50\uff0c\u5177\u4f53\u89c1\u4e0b\u9762\u7684\u4ee3\u7801\u3002\n\n\n/**\n * \u6839\u636e\u7ed9\u5b9a\u7684bean \u6765\u5b9e\u73b0\u8d44\u4ea7\u5355\u9879\u7684\u6dfb\u52a0\u5de5\u4f5c\n */\n@Override\npublic boolean add(Object bean) {\n    try {\n        String sql = \"insert into fixed_assets(assets_name,assets_catagory,assets_model,assets_value,assets_purchase_date,assets_state,assets_user,assets_remark)\"\n                + \" values(?,?,?,?,?,?,?,?)\";\n        FixedAssets fas = (FixedAssets) bean;\n        Object[] params = { fas.getName(), fas.getCatagory(), fas.getModel(), fas.getValue(), fas.getPurchaseDate(),\n                fas.getState(), fas.getUser(), fas.getRemark() };\n        Connection conn = ConnectionFactory.getConnection();\n        PreparedStatement ps = conn.prepareStatement(sql);\n        for (int i = 0; i \n params.length; i++) {\n            ps.setObject((Integer) (i + 1), params[i]);\n        }\n        int isSuccess = ps.executeUpdate();\n        conn.close();\n        ps.close();\n        return isSuccess == 1 ? true : false;\n    } catch (Exception e) {\n        throw new RuntimeException(\"\u56fa\u5b9a\u8d44\u4ea7\u63d2\u5165\u6570\u636e\u65f6\u5931\u8d25\uff01\\n\" + e);\n    }\n}\n\n\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u6280\u5de7\uff0c\u4f46\u662f\u771f\u7684\u5728\u5f00\u53d1\u4e2d\u662f\u90a3\u4e48\u7684\u5b9e\u7528\u3002\u6211\u60f3\u8fd9\u4e5f\u662f\u80fd\u7ecf\u5f97\u8d77\u65f6\u95f4\u8003\u9a8c\u7684\u7a0b\u5e8f\u5458\u7684\u667a\u6167\u7684\u7ed3\u6676\u5427\u3002\n\n\n\u7136\u540e\u662f\u5173\u4e8e\u56e2\u961f\u5f00\u53d1\u7684\u6536\u83b7\u3002\n\n\n\u6211\u4eec\u5c0f\u7ec4\u662f\u4e24\u4e2a\u4eba\uff0c\u6211\u548c\u59da\u664b\u5b8f\u3002\u5728\u5f00\u59cb\u7f16\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u5c31\u5173\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u8bbe\u8ba1\u505a\u4e86\u8be6\u7ec6\u7684\u8ba8\u8bba\uff0c\u7136\u540e\u6839\u636e\u9879\u76ee\u9700\u6c42\u5236\u5b9a\u4e86\u76f8\u5173\u7684\u8868\u4ee5\u53ca\u5185\u90e8\u5b57\u6bb5\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u8ba9\u6211\u4e5f\u770b\u5230\u4e86\u81ea\u5df1\u8fd9\u65b9\u9762\u7684\u4e0d\u8db3\u3002\u6bd4\u5982\u8bf4\u672c\u6b21\u8868\u7684\u8bbe\u8ba1\uff0c\u6211\u7684\u611f\u609f\u662f\uff1a\n\n\n\n\n\n\n\u9996\u5148\u8003\u8651\u72ec\u7acb\u4e8e\u5176\u4ed6\u7684\u8868\u7684\u90a3\u4e2a\u8868\u7ed3\u6784\uff0c\u8fd9\u6837\u7684\u8868\u6700\u5bb9\u6613\u786e\u5b9a\u4e0b\u6765\u3002\n\n\n\n\n\n\n\u7136\u540e\u662f\u8003\u8651\u4e1a\u52a1\u5173\u7cfb\uff0c\u53ef\u4ee5\u8fd9\u6837\u7684\u8fdb\u884c\u5047\u8bbe\u3002\u5f53\u8fd9\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\u4f1a\u5f15\u8d77\u5176\u4ed6\u7684\u8868\u7684\u6570\u636e\u53d1\u751f\u6539\u53d8\u5417\uff1f \u5982\u679c\u4f1a\u770b\u770b\u662f\u4e00\u5bf9\u4e00\uff0c\u591a\u5bf9\u4e00\u8fd8\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u3002\u7136\u540e\u8bbe\u7f6e\u5916\u952e\u7ea6\u675f\u5373\u53ef\u3002\n\n\n\n\n\n\n\u6709\u7684\u65f6\u5019\u9700\u8981\u6dfb\u52a0\u89c6\u56fe\nView\n\u6765\u4fdd\u62a4\u6570\u636e\u5e93\u4e2d\u7684\u8868\uff0c\u4e5f\u6709\u7684\u65f6\u5019\u4f1a\u6dfb\u52a0\nTrigger\n \u6216\u8005\n\u5b58\u50a8\u8fc7\u7a0b\n\u6765\u4fdd\u8bc1\u6570\u636e\u7684\u8054\u52a8\u6548\u679c\u3002\n\n\n\n\n\n\n\u6700\u540e\u6839\u636e\u8868\u5173\u7cfb\u521b\u5efa\nE-R\n\u5173\u7cfb\u56fe\u5373\u53ef\u3002\n\n\n\n\n\n\n\u7136\u540e\u662f\u56e2\u961f\u9879\u76ee\u5408\u4f5c\u8fc7\u7a0b\u7684\u914d\u5408\u611f\u609f\uff0c\u6211\u548c\u59da\u664b\u5b8f\u5728\u5f00\u53d1\u7684\u65f6\u5019\u7ecf\u8fc7\u4e86\u8be6\u7ec6\u7684\u8ba8\u8bba\uff0c\u660e\u786e\u4e86\u5404\u81ea\u7684\u4efb\u52a1\uff0c\u524d\u540e\u7aef\u7684\u5f00\u53d1\u4e92\u4e0d\u5e72\u6270\u800c\u4e14\u53c8\u80fd\u6070\u5982\u5176\u5206\u7684\u9ed8\u5951\u7684\u914d\u5408\uff0c\u8fd9\u6837\u7684\u56e2\u961f\u5f00\u53d1\u624d\u662f\u6700\u9ad8\u6548\u7684\u56e2\u961f\u5f00\u53d1\u3002 \n\n\n\u65b9\u5411\n\n\n\u5f00\u53d1\u7684\u8fc7\u7a0b\uff0c\u771f\u7684\u662f\u4e00\u4e2a\u5f88\u953b\u70bc\u4eba\u7684\u8fc7\u7a0b\u3002\u4e00\u76f4\u4ee5\u4e3a\u6cdb\u578b\uff0c\u53cd\u5c04\u4ec0\u4e48\u7684\u6280\u672f\u6ca1\u6709\u4ec0\u4e48\u5b9e\u7528\u6027\uff0c\u73b0\u5728\u770b\u6765\u8fd8\u771f\u7684\u662f\nToo young to simple\n\u554a\u3002\u5b9e\u9645\u7684\u5f00\u53d1\u4e2d\u6700\u5e38\u7528\u800c\u4e14\u4e5f\u662f\u6700\u597d\u7528\u7684\u4f30\u8ba1\u5c31\u662f\u8fd9\u4e9b\u4e1c\u897f\u4e86\u3002\n\n\n\u6211\u7684\u60f3\u6cd5\u5c31\u662f\u8fd1\u671f\u5199\u51fa\u4e00\u5957\u5e38\u7528\u7684\u5de5\u5177\u96c6\uff0c\u7136\u540e\u4e0d\u65ad\u7684\u68c0\u9a8c\u5176\u6b63\u786e\u5b9a\u4ee5\u53ca\u5b9e\u7528\u6027\u3002\n\n\n\u59da\u664b\u5b8f\u7684\u611f\u609f", 
            "title": "Experience"
        }, 
        {
            "location": "/Experience/#our-experience", 
            "text": "\u4e0b\u9762\u8c08\u8c08\u5b8c\u6210\u6b64\u6b21\u5927\u4f5c\u4e1a\u7684\u4e00\u4e9b\u611f\u609f\u5427\u3002", 
            "title": "Our Experience"
        }, 
        {
            "location": "/Experience/#_1", 
            "text": "", 
            "title": "\u90ed\u745e\u5f6a\u7684\u611f\u609f"
        }, 
        {
            "location": "/Experience/#_2", 
            "text": "\u5c0f\u5b66\u671f\u521a\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u89c9\u5f97\u81ea\u5df1\u5b66\u4e86 Java \u8fd9\u4e48\u4e45\u4e86\uff0c\u81ea\u8ba4\u4e3a\u5b66\u7684\u5f88\u597d\u4e86\u3002\u6240\u4ee5\u5c31\u6ca1\u600e\u4e48\u5728\u610f\u8bfe\u5802\u4e0a\u76f8\u5173\u77e5\u8bc6\u70b9\u7684\u8bb2\u89e3\u3002\u800c\u662f\u5b66\u4e00\u4e9b\u5176\u4ed6\u7684\u6bd4\u8f83\u65b0\u5947\u7684\u4e1c\u897f\uff0c\u867d\u7136\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u83b7\u53d6\u5230\u4e86\u66f4\u591a\u7684\u77e5\u8bc6\uff0c\u4f46\u662f\u5374\u6ca1\u80fd\u6253\u4e0b\u66f4\u52a0\u7262\u56fa\u7684\u6839\u57fa\uff0c\u73b0\u5728\u60f3\u60f3\u8fd9\u771f\u7684\u662f\u6709\u70b9\u201c\u62e3\u4e86\u829d\u9ebb\u4e22\u4e86\u897f\u74dc\u201d\u7684\u97f5\u5473\u3002  \u5176\u5b9e\u4ed4\u7ec6\u7684\u601d\u8003\u4e00\u4e0b\uff0c\u8001\u9a6c\u5728\u8bfe\u5802\u4e0a\u6240\u8bb2\u7684\u57fa\u672c\u4e0a\u5168\u662f\u4f01\u4e1a\u7ea7\u6216\u8005\u5f00\u53d1\u7ea7\u8fd9\u4e2a\u5c42\u9762\u4e0a\u5e38\u7528\u7684\u6280\u672f\u3002\u76f8\u6bd4\u4e8e\u81ea\u5df1\u5b66\u4e60\u800c\u8a00\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u66f4\u52a0\u8d34\u8fd1\u4e8e\u771f\u5b9e\u6761\u4ef6\u4e0b\u8f6f\u4ef6\u7684\u5f00\u53d1\uff0c\u6240\u4ee5\u662f\u5f88\u6709\u5fc5\u8981\u7684\u3002\u867d\u7136\u81ea\u5df1\u5b66\u8fc7\u8fd9\u4e9b\u6240\u6709\u7684\u77e5\u8bc6\u70b9\uff0c\u4f46\u8fd8\u662f\u4f1a\u5f88\u6709\u7528\u7684\u3002  \u5728\u6b64\uff0c\u6211\u6df1\u523b\u7684\u53cd\u601d\u81ea\u5df1\u8fd9\u79cd\u4e0d\u8ba4\u771f\u7684\u884c\u4e3a\uff0c\u786e\u5b9e\u662f\u5e94\u8be5\u9759\u4e0b\u5fc3\u6765\uff0c\u7a33\u624e\u7a33\u6253\u7684\u5b66\u4e00\u6ce2\u7684\u3002", 
            "title": "\u53cd\u601d"
        }, 
        {
            "location": "/Experience/#_3", 
            "text": "\u8bf4\u5230\u6536\u83b7\uff0c\u8fd9\u5c31\u6709\u5f88\u591a\u4e86\u3002  \u5148\u4ece\u8bfe\u5802\u4e0a\u5b66\u5230\u7684\u4e00\u4e2a\u5c0f\u6280\u5de7\u5427\u3002\u90a3\u662f\u4e00\u4e2a\u5173\u4e8e JDBC \u64cd\u4f5c\u7684\u5c0f\u4f8b\u5b50\uff0c\u5177\u4f53\u89c1\u4e0b\u9762\u7684\u4ee3\u7801\u3002  /**\n * \u6839\u636e\u7ed9\u5b9a\u7684bean \u6765\u5b9e\u73b0\u8d44\u4ea7\u5355\u9879\u7684\u6dfb\u52a0\u5de5\u4f5c\n */\n@Override\npublic boolean add(Object bean) {\n    try {\n        String sql = \"insert into fixed_assets(assets_name,assets_catagory,assets_model,assets_value,assets_purchase_date,assets_state,assets_user,assets_remark)\"\n                + \" values(?,?,?,?,?,?,?,?)\";\n        FixedAssets fas = (FixedAssets) bean;\n        Object[] params = { fas.getName(), fas.getCatagory(), fas.getModel(), fas.getValue(), fas.getPurchaseDate(),\n                fas.getState(), fas.getUser(), fas.getRemark() };\n        Connection conn = ConnectionFactory.getConnection();\n        PreparedStatement ps = conn.prepareStatement(sql);\n        for (int i = 0; i   params.length; i++) {\n            ps.setObject((Integer) (i + 1), params[i]);\n        }\n        int isSuccess = ps.executeUpdate();\n        conn.close();\n        ps.close();\n        return isSuccess == 1 ? true : false;\n    } catch (Exception e) {\n        throw new RuntimeException(\"\u56fa\u5b9a\u8d44\u4ea7\u63d2\u5165\u6570\u636e\u65f6\u5931\u8d25\uff01\\n\" + e);\n    }\n}  \u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u6280\u5de7\uff0c\u4f46\u662f\u771f\u7684\u5728\u5f00\u53d1\u4e2d\u662f\u90a3\u4e48\u7684\u5b9e\u7528\u3002\u6211\u60f3\u8fd9\u4e5f\u662f\u80fd\u7ecf\u5f97\u8d77\u65f6\u95f4\u8003\u9a8c\u7684\u7a0b\u5e8f\u5458\u7684\u667a\u6167\u7684\u7ed3\u6676\u5427\u3002  \u7136\u540e\u662f\u5173\u4e8e\u56e2\u961f\u5f00\u53d1\u7684\u6536\u83b7\u3002  \u6211\u4eec\u5c0f\u7ec4\u662f\u4e24\u4e2a\u4eba\uff0c\u6211\u548c\u59da\u664b\u5b8f\u3002\u5728\u5f00\u59cb\u7f16\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u5c31\u5173\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u8bbe\u8ba1\u505a\u4e86\u8be6\u7ec6\u7684\u8ba8\u8bba\uff0c\u7136\u540e\u6839\u636e\u9879\u76ee\u9700\u6c42\u5236\u5b9a\u4e86\u76f8\u5173\u7684\u8868\u4ee5\u53ca\u5185\u90e8\u5b57\u6bb5\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u8ba9\u6211\u4e5f\u770b\u5230\u4e86\u81ea\u5df1\u8fd9\u65b9\u9762\u7684\u4e0d\u8db3\u3002\u6bd4\u5982\u8bf4\u672c\u6b21\u8868\u7684\u8bbe\u8ba1\uff0c\u6211\u7684\u611f\u609f\u662f\uff1a    \u9996\u5148\u8003\u8651\u72ec\u7acb\u4e8e\u5176\u4ed6\u7684\u8868\u7684\u90a3\u4e2a\u8868\u7ed3\u6784\uff0c\u8fd9\u6837\u7684\u8868\u6700\u5bb9\u6613\u786e\u5b9a\u4e0b\u6765\u3002    \u7136\u540e\u662f\u8003\u8651\u4e1a\u52a1\u5173\u7cfb\uff0c\u53ef\u4ee5\u8fd9\u6837\u7684\u8fdb\u884c\u5047\u8bbe\u3002\u5f53\u8fd9\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\u4f1a\u5f15\u8d77\u5176\u4ed6\u7684\u8868\u7684\u6570\u636e\u53d1\u751f\u6539\u53d8\u5417\uff1f \u5982\u679c\u4f1a\u770b\u770b\u662f\u4e00\u5bf9\u4e00\uff0c\u591a\u5bf9\u4e00\u8fd8\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u3002\u7136\u540e\u8bbe\u7f6e\u5916\u952e\u7ea6\u675f\u5373\u53ef\u3002    \u6709\u7684\u65f6\u5019\u9700\u8981\u6dfb\u52a0\u89c6\u56fe View \u6765\u4fdd\u62a4\u6570\u636e\u5e93\u4e2d\u7684\u8868\uff0c\u4e5f\u6709\u7684\u65f6\u5019\u4f1a\u6dfb\u52a0 Trigger  \u6216\u8005 \u5b58\u50a8\u8fc7\u7a0b \u6765\u4fdd\u8bc1\u6570\u636e\u7684\u8054\u52a8\u6548\u679c\u3002    \u6700\u540e\u6839\u636e\u8868\u5173\u7cfb\u521b\u5efa E-R \u5173\u7cfb\u56fe\u5373\u53ef\u3002    \u7136\u540e\u662f\u56e2\u961f\u9879\u76ee\u5408\u4f5c\u8fc7\u7a0b\u7684\u914d\u5408\u611f\u609f\uff0c\u6211\u548c\u59da\u664b\u5b8f\u5728\u5f00\u53d1\u7684\u65f6\u5019\u7ecf\u8fc7\u4e86\u8be6\u7ec6\u7684\u8ba8\u8bba\uff0c\u660e\u786e\u4e86\u5404\u81ea\u7684\u4efb\u52a1\uff0c\u524d\u540e\u7aef\u7684\u5f00\u53d1\u4e92\u4e0d\u5e72\u6270\u800c\u4e14\u53c8\u80fd\u6070\u5982\u5176\u5206\u7684\u9ed8\u5951\u7684\u914d\u5408\uff0c\u8fd9\u6837\u7684\u56e2\u961f\u5f00\u53d1\u624d\u662f\u6700\u9ad8\u6548\u7684\u56e2\u961f\u5f00\u53d1\u3002", 
            "title": "\u6536\u83b7"
        }, 
        {
            "location": "/Experience/#_4", 
            "text": "\u5f00\u53d1\u7684\u8fc7\u7a0b\uff0c\u771f\u7684\u662f\u4e00\u4e2a\u5f88\u953b\u70bc\u4eba\u7684\u8fc7\u7a0b\u3002\u4e00\u76f4\u4ee5\u4e3a\u6cdb\u578b\uff0c\u53cd\u5c04\u4ec0\u4e48\u7684\u6280\u672f\u6ca1\u6709\u4ec0\u4e48\u5b9e\u7528\u6027\uff0c\u73b0\u5728\u770b\u6765\u8fd8\u771f\u7684\u662f Too young to simple \u554a\u3002\u5b9e\u9645\u7684\u5f00\u53d1\u4e2d\u6700\u5e38\u7528\u800c\u4e14\u4e5f\u662f\u6700\u597d\u7528\u7684\u4f30\u8ba1\u5c31\u662f\u8fd9\u4e9b\u4e1c\u897f\u4e86\u3002  \u6211\u7684\u60f3\u6cd5\u5c31\u662f\u8fd1\u671f\u5199\u51fa\u4e00\u5957\u5e38\u7528\u7684\u5de5\u5177\u96c6\uff0c\u7136\u540e\u4e0d\u65ad\u7684\u68c0\u9a8c\u5176\u6b63\u786e\u5b9a\u4ee5\u53ca\u5b9e\u7528\u6027\u3002", 
            "title": "\u65b9\u5411"
        }, 
        {
            "location": "/Experience/#_5", 
            "text": "", 
            "title": "\u59da\u664b\u5b8f\u7684\u611f\u609f"
        }, 
        {
            "location": "/aboutus/", 
            "text": "Welcome to this page\n\n\n\n\nBeyond This Homework\n\n\nThe Big Homework isn't the end of us. We also do something interesting.\n\n\n\n\nPersonal Page\n  \u4e2a\u4eba\u4e3b\u9875\u5236\u4f5c\uff0c\u7ef4\u62a4\uff0c\u53ca\u53d1\u5e03\u3002\n\n\nAutomatic Document Tools\n  \u81ea\u52a8\u5316\u6587\u6863\u53d1\u5e03\u5de5\u5177\n\n\nBlog System\n  \u4e2a\u4eba\u5b9a\u5236\u535a\u5ba2\u7cfb\u7edf\n\n\nModel Making in Maya\n \u4eba\u7269\u6a21\u578b\u5236\u4f5c\n\n\nWeb Applications\n  \u4e92\u8054\u7f51\u5e94\u7528\n\n\u00b7\u00b7\u00b7\n\n\u00b7\u00b7\u00b7\n\n\u00b7\u00b7\u00b7\n\n\n\n\nHow to get in touch with us\n\n\nFor full documentation visit \n\u6211\u7684\u4e3b\u9875\n.\n\n\n\n\n\n\n\u6211\uff1a\n\n\n\n\nQQ\uff1a 1064319632\n\n\nE-mail:  1064319632@qq.com\n\n\nAddress:   \u8fbd\u5b81\u7701\u5927\u8fde\u5e02\u5927\u8fde\u7406\u5de5\u5927\u5b66\u8f6f\u4ef6\u5b66\u96624\u820d218\u5bdd\n\n\n\n\n\n\n\n\n\u59da\u664b\u5b8f\uff1a\n\n\n\n\nQQ\uff1a 1954008741\n\n\nE-mail\uff1a  1954008741@qq.com\n\n\nAddress:   \u8fbd\u5b81\u7701\u5927\u8fde\u5e02\u5927\u8fde\u7406\u5de5\u5927\u5b66\u8f6f\u4ef6\u5b66\u96624\u820d215\u5bdd\n\n\n\n\n\n\n\n\nLeave your comments\n\n\nYou can leave your comments or contaction. Thx.", 
            "title": "aboutus"
        }, 
        {
            "location": "/aboutus/#welcome-to-this-page", 
            "text": "", 
            "title": "Welcome to this page"
        }, 
        {
            "location": "/aboutus/#beyond-this-homework", 
            "text": "The Big Homework isn't the end of us. We also do something interesting.   Personal Page   \u4e2a\u4eba\u4e3b\u9875\u5236\u4f5c\uff0c\u7ef4\u62a4\uff0c\u53ca\u53d1\u5e03\u3002  Automatic Document Tools   \u81ea\u52a8\u5316\u6587\u6863\u53d1\u5e03\u5de5\u5177  Blog System   \u4e2a\u4eba\u5b9a\u5236\u535a\u5ba2\u7cfb\u7edf  Model Making in Maya  \u4eba\u7269\u6a21\u578b\u5236\u4f5c  Web Applications   \u4e92\u8054\u7f51\u5e94\u7528 \u00b7\u00b7\u00b7 \n\u00b7\u00b7\u00b7 \n\u00b7\u00b7\u00b7", 
            "title": "Beyond This Homework"
        }, 
        {
            "location": "/aboutus/#how-to-get-in-touch-with-us", 
            "text": "For full documentation visit  \u6211\u7684\u4e3b\u9875 .    \u6211\uff1a   QQ\uff1a 1064319632  E-mail:  1064319632@qq.com  Address:   \u8fbd\u5b81\u7701\u5927\u8fde\u5e02\u5927\u8fde\u7406\u5de5\u5927\u5b66\u8f6f\u4ef6\u5b66\u96624\u820d218\u5bdd     \u59da\u664b\u5b8f\uff1a   QQ\uff1a 1954008741  E-mail\uff1a  1954008741@qq.com  Address:   \u8fbd\u5b81\u7701\u5927\u8fde\u5e02\u5927\u8fde\u7406\u5de5\u5927\u5b66\u8f6f\u4ef6\u5b66\u96624\u820d215\u5bdd", 
            "title": "How to get in touch with us"
        }, 
        {
            "location": "/aboutus/#leave-your-comments", 
            "text": "You can leave your comments or contaction. Thx.", 
            "title": "Leave your comments"
        }
    ]
}